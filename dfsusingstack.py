# -*- coding: utf-8 -*-
"""dfsUsingStack.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EI09d9MUsoPb5g_Zbo663iLiwRhCuFbT
"""

graph = {
    'A':['B','C'],
    'B':['D','E'],
    'C':['F'],
    'D':[],
    'E':[],
    'F':[]
}

def dfs(graph, start_node):
  stack=[start_node];
  visited=set() # set() -> unordered collection of unique elements
  while stack: # loop until stack is empty
    current_node = stack.pop()
    if current_node not in visited:
      print(current_node, end=' ')
      visited.add(current_node)
      for neighbor in reversed(graph[current_node]):
        stack.append(neighbor)

print("DFS traversal order(using stack): ")
dfs(graph,'A')